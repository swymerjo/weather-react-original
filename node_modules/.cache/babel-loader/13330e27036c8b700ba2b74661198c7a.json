{"ast":null,"code":"var _jsxFileName = \"/Users/sammywymer/Documents/GitHub/weather-react-original/src/Forecast.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport './Forecast.css';\nimport WeatherForecastDay from \"./WeatherForecastDay\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Forecast(props) {\n  _s();\n\n  let [loaded, setLoaded] = useState(false);\n  let [forecast, setForecast] = useState(null);\n  useEffect(() => {\n    setLoaded(false);\n  }, [props.coordinates]);\n\n  function handleResponse(response) {\n    setForecast(response.data.daily);\n    setLoaded(true);\n  }\n\n  if (loaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Forecast\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: forecast.map(function (dailyForecast, index) {\n          if (index < 5) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col p-0\",\n              children: /*#__PURE__*/_jsxDEV(WeatherForecastDay, {\n                data: dailyForecast\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 21\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 21\n            }, this);\n          } else {\n            return null;\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this);\n  } else {\n    let longitude = props.coordinates.lon;\n    let latitude = props.coordinates.lat;\n    let apiKey = \"96c6ec35768d7fb6accd0167701b703c\";\n    let apiUrl = `https://api.openweathermap.org/data/2.5/onecall?lat=${latitude}&lon=${longitude}&appid=${apiKey}&units=metric`;\n    axios.get(apiUrl).then(handleResponse);\n    return null;\n  }\n}\n\n_s(Forecast, \"kLNsBjMbwg/21mEy29QJZwMPCGo=\");\n\n_c = Forecast;\n\nvar _c;\n\n$RefreshReg$(_c, \"Forecast\");","map":{"version":3,"sources":["/Users/sammywymer/Documents/GitHub/weather-react-original/src/Forecast.js"],"names":["axios","React","useState","useEffect","WeatherForecastDay","Forecast","props","loaded","setLoaded","forecast","setForecast","coordinates","handleResponse","response","data","daily","map","dailyForecast","index","longitude","lon","latitude","lat","apiKey","apiUrl","get","then"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAO,gBAAP;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAwB;AAAA;;AACnC,MAAI,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,KAAD,CAAlC;AACA,MAAI,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,IAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,SAAS,CAAC,KAAD,CAAT;AACH,GAFQ,EAEL,CAACF,KAAK,CAACK,WAAP,CAFK,CAAT;;AAIA,WAASC,cAAT,CAAwBC,QAAxB,EAAiC;AACjCH,IAAAA,WAAW,CAACG,QAAQ,CAACC,IAAT,CAAcC,KAAf,CAAX;AACAP,IAAAA,SAAS,CAAC,IAAD,CAAT;AACC;;AAEL,MAAID,MAAJ,EAAY;AACR,wBACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,kBACCE,QAAQ,CAACO,GAAT,CAAa,UAASC,aAAT,EAAwBC,KAAxB,EAA+B;AACzC,cAAIA,KAAK,GAAG,CAAZ,EAAc;AACd,gCACI;AAAK,cAAA,SAAS,EAAC,SAAf;AAAA,qCACA,QAAC,kBAAD;AAAoB,gBAAA,IAAI,EAAED;AAA1B;AAAA;AAAA;AAAA;AAAA;AADA,eAA8BC,KAA9B;AAAA;AAAA;AAAA;AAAA,oBADJ;AAKC,WAND,MAMO;AACH,mBAAO,IAAP;AACH;AACJ,SAVA;AADD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAiBH,GAlBD,MAkBO;AACH,QAAIC,SAAS,GAAGb,KAAK,CAACK,WAAN,CAAkBS,GAAlC;AACA,QAAIC,QAAQ,GAAGf,KAAK,CAACK,WAAN,CAAkBW,GAAjC;AACA,QAAIC,MAAM,GAAE,kCAAZ;AACA,QAAIC,MAAM,GAAI,uDAAsDH,QAAS,QAAOF,SAAU,UAASI,MAAO,eAA9G;AAEAvB,IAAAA,KAAK,CAACyB,GAAN,CAAUD,MAAV,EAAkBE,IAAlB,CAAuBd,cAAvB;AAEA,WAAO,IAAP;AAEH;AACA;;GA1CuBP,Q;;KAAAA,Q","sourcesContent":["import axios from \"axios\";\nimport React, {useState, useEffect} from \"react\";\nimport './Forecast.css';\nimport WeatherForecastDay from \"./WeatherForecastDay\";\n\nexport default function Forecast(props){\n    let [loaded, setLoaded] = useState(false);\n    let [forecast, setForecast] = useState(null);\n\n    useEffect(() => {\n        setLoaded(false);\n    } , [props.coordinates]);\n   \n    function handleResponse(response){\n    setForecast(response.data.daily);\n    setLoaded(true);\n    }\n\nif (loaded) {\n    return(\n        <div className=\"Forecast\">\n            <div className=\"row\">\n            {forecast.map(function(dailyForecast, index) {\n                if (index < 5){\n                return (\n                    <div className=\"col p-0\" key={index}>\n                    <WeatherForecastDay data={dailyForecast}/>\n                    </div>\n                );\n                } else {\n                    return null;\n                }\n            })}    \n        </div>\n        </div>\n    )\n} else {\n    let longitude = props.coordinates.lon;\n    let latitude = props.coordinates.lat;\n    let apiKey =\"96c6ec35768d7fb6accd0167701b703c\";\n    let apiUrl = `https://api.openweathermap.org/data/2.5/onecall?lat=${latitude}&lon=${longitude}&appid=${apiKey}&units=metric`;\n\n    axios.get(apiUrl).then(handleResponse)\n    \n    return null;\n\n}\n}"]},"metadata":{},"sourceType":"module"}